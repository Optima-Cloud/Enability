<apex:page showHeader="false" standardStylesheets="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0">
  <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
    <head>
      <meta charset="utf-8" />
      <title>Living Electrics Trial Sprint Review</title>
      <meta http-equiv="x-ua-compatible" content="ie=edge" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <apex:stylesheet value="{!URLFOR($Resource.SLDS213, 'assets/styles/salesforce-lightning-design-system-vf.min.css')}" />
    </head>
    
    <apex:remoteObjects >
      <apex:remoteObjectModel name="Account" fields="Id,Name,LastModifiedDate"/>
    </apex:remoteObjects>

    <body>
      <!-- REQUIRED SLDS WRAPPER -->
      <div class="LivingElectrics">
        <!-- PAGE HEADER -->
        <div class="slds-page-header" role="banner">

          <!-- PAGE HEADER TOP ROW -->
          <div class="slds-grid">
            <!-- PAGE HEADER / ROW 1 / COLUMN 1 -->
            <div class="slds-col">
              <!-- HEADING AREA -->
              <!-- MEDIA OBJECT = FIGURE + BODY -->
              <div class="slds-media slds-media--top slds-no-space slds-grow">
                <div class="slds-media__figure">
                  <span class="slds-icon_container slds-icon-standard-user">
                    <svg aria-hidden="true" class="slds-icon slds-icon--large">
                      <use xlink:href="{!URLFOR($Resource.SLDS213, 'assets/icons/standard-sprite/svg/symbols.svg#user')}"></use>
                    </svg>
                  </span>
                </div>

                <div class="slds-media__body">
                  <p class="slds-text-heading--label">Sprint Review</p>
                  <h1 class="slds-page-header__title">Review items contained in sprint</h1>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- PRIMARY CONTENT WRAPPER -->
        <div class="myapp">
          <!-- ACCOUNT LIST TABLE -->
          <div id="account-list" class="slds-p-vertical--large"></div>
        </div>

        <!-- FOOTER -->
        <footer role="contentinfo" class="slds-p-around--large">
          <!-- LAYOUT GRID -->
          <div class="slds-grid slds-grid--align-spread">
            <p class="slds-col">Salesforce Lightning Design System Example</p>
            <p class="slds-col">&copy; Living Electrics</p>
          </div>
        </footer>
      </div>

      <script>
        var account = new SObjectModel.Account();
        var outputDiv = document.getElementById('account-list');

        function updateOutputDiv() {
          account.retrieve(
            { limit: 10 },
            function(error, records) {
              if (error) {
                alert(error.message);
              } else {

                // create data table
                var dataTable = document.createElement('table');
                dataTable.className = 'slds-table slds-table--bordered slds-table--cell-buffer slds-no-row-hover';

                // add header row
                var tableHeader = dataTable.createHead();
                var tableHeaderRow = tableHeader.insertRow();
 
                var tableHeaderRowCell1 = tableHeaderRow.insertCell(0);
                tableHeaderRowCell1.appendChild(document.createTextNode('Account name'));
                tableHeaderRowCell1.setAttribute('scope', 'col');
                tableHeaderRowCell1.setAttribute('class', 'slds-text-heading--label');

                var tableHeaderRowCell2 = tableHeaderRow.insertCell(1);
                tableHeaderRowCell2.appendChild(document.createTextNode('Quantity'));
                tableHeaderRowCell2.setAttribute('scope', 'col');
                tableHeaderRowCell2.setAttribute('class', 'slds-text-heading--label');

                // build table body
                var tableBody = dataTable.appendChild(document.createElement('tbody'))
                var dataRow, dataRowCell1, dataRowCell2, recordName, recordId;
                records.forEach(function(record) {

                  dataRow = tableBody.insertRow();

                  dataRowCell1 = dataRow.insertCell(0);
                  recordName = document.createTextNode(record.get('Name'));
                  dataRowCell1.appendChild(recordName);

                  dataRowCell2 = dataRow.insertCell(1);
                  recordId = document.createTextNode(record.get('Id'));
                  dataRowCell2.appendChild(recordId);
                });

                if (outputDiv.firstChild) {
                  // replace table if it already exists
                  // see later in tutorial
                  outputDiv.replaceChild(dataTable, outputDiv.firstChild);
                } else {
                  outputDiv.appendChild(dataTable);
                }
              }
            }
          );
        }
        updateOutputDiv();
      </script>
    </body>
  </html>
</apex:page>